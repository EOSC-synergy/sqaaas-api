openapi: 3.0.0
info:
  title: SQAaaS API
  description: >-
    API for the Software and Service Quality Assurance as a Service (SQAaaS)
    component.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 0.1.0
servers:
  - url: 'http://api.sqaaas.eosc-synergy.eu/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.sqaaas.eosc-synergy.eu'
    description: 'Optional server description, e.g. Internal staging server for testing'
paths:
  /pipeline:
    post:
      operationId: add_pipeline
      summary: Creates a pipeline.
      description: >
        Provides a ready-to-use Jenkins pipeline based on the v2 series of
        jenkins-pipeline-library.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '201':
          description: Created
    get:
      operationId: get_pipelines
      summary: Gets pipeline IDs.
      description: |
        Returns the list of IDs for the defined pipelines.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
  '/pipeline/{pipeline_id}':
    get:
      operationId: get_pipeline_by_id
      summary: Find pipeline by ID
      parameters:
        - in: path
          name: pipeline_id
          description: ID of the pipeline to get
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pipeline not found
components:
  schemas:
    Repository:
      type: object
      properties:
        repo:
          type: string
          format: uri
        branch:
          type: string
    Commands:
      type: object
      properties:
        commands:
          type: array
          items:
            type: string
          default: []
          example:
            - make clean
            - make html
    Tox:
      type: object
      properties:
        tox:
          type: object
          properties:
            testenv:
              type: array
              items:
                type: string
              example: cover
            tox_file:
              type: string
              default: tox.ini
              example: tox.ini
          required:
            - testenv
    CriterionWithRepo:
      type: object
      properties:
        criterion:
          type: string
          enum:
            - qc_style
            - qc_unit
            - qc_functional
            - qc_security
            - qc_doc
        repos:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Repository'
              - type: object
                properties:
                  container:
                    type: string
                  build_tool:
                    anyOf:
                      - $ref: '#/components/schemas/Commands'
                      - $ref: '#/components/schemas/Tox'
                required:
                  - container
                  - build_tool
      required:
        - criterion
        - repos
    Pipeline:
      type: object
      properties:
        sqa_criteria:
          type: array
          items:
            $ref: '#/components/schemas/CriterionWithRepo'
